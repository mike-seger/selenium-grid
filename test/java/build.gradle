plugins {
	id "java"
	id "maven-publish"
	id "com.adarshr.test-logger" version "3.0.0"
	id "com.github.ben-manes.versions" version "0.38.0"
}

repositories {
	mavenCentral()
}

ext {
	seleniumVersion = "3.141.59"
	jupiterVersion = "5.7.1"
	jacksonVersion = "2.12.3"
}

dependencies {
	testImplementation (
			"org.seleniumhq.selenium:selenium-api:${seleniumVersion}",
			"org.seleniumhq.selenium:selenium-remote-driver:${seleniumVersion}",
			"org.seleniumhq.selenium:selenium-java:${seleniumVersion}",
			"com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}",
			"com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}",
			"com.github.skjolber.jackson:jackson-syntax-highlight:1.0.6",
			"ch.qos.logback:logback-classic:1.2.3",
			"org.slf4j:jul-to-slf4j:1.7.30",
			"org.junit.jupiter:junit-jupiter-api:${jupiterVersion}",
			"org.junit.jupiter:junit-jupiter-engine:${jupiterVersion}",
			"org.junit.jupiter:junit-jupiter-params:${jupiterVersion}",
			"org.assertj:assertj-core:3.19.0",
	)
}

dependencyUpdates.resolutionStrategy {
	componentSelection { rules ->
		rules.all { ComponentSelection selection ->
			boolean rejected = ["alpha", "beta", "rc", "cr", "m", "preview", "b", "ea", "pr"].any { qualifier ->
				selection.candidate.version ==~ /(?i).*[.-]$qualifier[.\d-+]*/
			}
			if (rejected) {
				selection.reject("Release candidate")
			}
		}
	}
}

group = "net128.com"
version = "1.0.0"
description = "Selenium Grid Test"
sourceCompatibility = "11"

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}

	// https://github.com/radarsh/gradle-test-logger-plugin
	testlogger {
		theme "mocha"
		showStandardStreams true
		slowThreshold 0
	}
}

task sourceJar(type: Jar) {
	from sourceSets.main.allJava
}

apply from: "maven.gradle"
